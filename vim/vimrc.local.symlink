" Wrap gitcommit file types at the appropriate length
filetype indent plugin on

" enables cross vim buffers (yanking and pasting across vimstances)
set clipboard+=unnamed


" Standard UI settings.
if $COLOR == "light"
  set background=light
else
  set background=dark
endif

" Standard text settings.
set encoding=utf-8
set textwidth=80

" Don't ignore case in searches.
set noignorecase

" Don't spell check.
set nospell

" Timeout on mode transfer.
set ttimeoutlen=50

" Avoid git gutter temp file errors.
let g:gitgutter_realtime = 0

" Inserting single characters.
nnoremap <space> :call InsertChar#insert(v:count1)<CR>

" Easy chdir.
nnoremap <leader>cd :cd %:p:h<CR>:pwd<CR>
nnoremap <leader>lcd :lcd %:p:h<CR>:pwd<CR>

" Inserting new lines.
nnoremap <CR> o<Esc>
nnoremap <BSlash> O<Esc>

" Set tab spacing to 2 spaces.
"set shiftwidth=2
"set softtabstop=2

" Do not auto comment when empty newline in existing comment.
autocmd FileType * setlocal formatoptions-=o

" Always use LaTeX over TeX, read class files as LaTeX.
let g:tex_flavor = 'latex'
autocmd BufNewFile,BufRead *.cls set filetype=tex

" Haskell specific settings.
let g:haskell_tabular = 0
let g:haddock_browser = 'google-chrome'
let g:no_haskell_conceal = 1

" Agda.
autocmd BufNewFile,BufRead *.agda set filetype=agda

" Overriding spf-13 vimrc settings.
set concealcursor=
noremap $ $
noremap 0 0
noremap ^ ^

" Avoid adding '.' to the iskeyword setting.
let g:sh_noisk = 1

" Tabularize helpers.
map <leader>a> :Tab /[-=]><CR>
map <leader>a< :Tab /<-<CR>
map <leader>a( :Tab /(.*)<CR>

" Different cursor shapes for nvc / insert modes
let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
